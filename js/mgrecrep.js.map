{"version":3,"sources":["/projects/nodejs/botbuilder/mongoose_record_replay/src/../src/mgrecrep.ts"],"names":[],"mappings":"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","file":"mgrecrep.js","sourcesContent":["/**\r\n * instrument mongoose to record/replay queries ( !! only queries so far)\r\n *\r\n * allows to run (mongoose read only) unit tests w.o. a mongoose instance\r\n *\r\n * @file\r\n */\r\n\r\nimport * as debugf from 'debugf';\r\n\r\nvar debuglog = debugf('mongoose_record_replay');\r\n//const loadlog = logger.logger('modelload', '');\r\n\r\nimport * as process from 'process';\r\nimport * as mongoose from 'mongoose';\r\nimport * as events from 'events';\r\nimport * as fs from 'fs';\r\nconst crypto = require('crypto');\r\n\r\n\r\n/**\r\n * The recording path, set via argument\r\n * or\r\n */\r\nvar recordingPath = 'mongoose_record_replay/';\r\nvar serializePath = 'mgrecrep/';\r\n\r\nvar theMode = undefined;\r\n\r\nexport function JSONParse(text: string): any {\r\n    function customDeSer(key, value) {\r\n        if (value.toString().indexOf(\"__REGEXP \") == 0) {\r\n            var m = value.split(\"__REGEXP \")[1].match(/\\/(.*)\\/(.*)?/);\r\n            return new RegExp(m[1], m[2] || \"\");\r\n        } else\r\n            return value;\r\n    }\r\n    return JSON.parse(text, customDeSer);\r\n}\r\n\r\n\r\n\r\nexport function JSONStringify(obj: any): string {\r\n    function customSer(key, value) {\r\n        if (value instanceof RegExp){\r\n            return (\"__REGEXP \" + value.toString());\r\n        }\r\n        else\r\n            return value;\r\n    }\r\n    return JSON.stringify(obj, customSer, 2);\r\n}\r\n\r\nfunction readFileAsJSON(filename: string): any {\r\n    var data = fs.readFileSync(filename, 'utf-8');\r\n    try {\r\n        return JSON.parse(data);\r\n    } catch (e) {\r\n        console.log(\"Content of file \" + filename + \" is no json\" + e);\r\n        process.exit(-1);\r\n    }\r\n    return undefined;\r\n}\r\n\r\n\r\nfunction assurePath(path: string) {\r\n    try {\r\n        fs.mkdirSync(path);\r\n    } catch (e) {\r\n\r\n    }\r\n    try {\r\n        fs.mkdirSync(path + 'data');\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\n\r\nvar dbEmitter = new events.EventEmitter();\r\n// unit test invoke this multiple times, avoid node js warning\r\ndbEmitter.setMaxListeners(0);\r\n\r\nexport function instrumentModel(model: mongoose.Model<any>) {\r\n    if (theMode === \"RECORD\") {\r\n        instrumentModelRecord(model);\r\n    } else if (theMode === \"REPLAY\") {\r\n        // todo\r\n        instrumentModelReplay(model);\r\n    }\r\n    return model;\r\n}\r\n\r\n\r\nfunction makeFileName(digest) {\r\n    return (recordingPath + 'data/' + digest + '.json');\r\n}\r\n\r\nexport function digestArgs(op: string, name : string, query : any) {\r\n    var md5sum = crypto.createHash('md5');\r\n    debuglog('here the name ' + name);\r\n    md5sum.update(op + name + JSONStringify(query));\r\n    var digest = '' + md5sum.digest('hex');\r\n    return digest;\r\n}\r\n\r\nexport function recordOp(op: string, name: string, query: any, res: any) {\r\n    var digest = digestArgs(op,name,query);\r\n    var resStr = JSON.stringify(res, undefined, 2);\r\n    var len = 0;\r\n    if(res && Array.isArray(res)) {\r\n        len = res.length;\r\n    } else {\r\n        len = resStr.length;\r\n    }\r\n    fs.writeFileSync(makeFileName(digest), resStr);\r\n\r\n    var known = {};\r\n    try {\r\n        known = readFileAsJSON(recordingPath + 'queries.json');\r\n    } catch (ex) {\r\n\r\n    }\r\n    known[digest] = {\r\n        op: op,\r\n        name: name,\r\n        digest: digest,\r\n        query: query,\r\n        res : len\r\n    };\r\n    fs.writeFileSync(recordingPath + 'queries.json', JSONStringify(known));\r\n}\r\n\r\nexport function retrieveOp(op: string, name: string, query: any) {\r\n    var digest = digestArgs(op,name, query);\r\n    var filename = makeFileName(digest);\r\n    debuglog(' filename ' + filename);\r\n    try {\r\n        var res = readFileAsJSON(filename);\r\n    } catch(e) {\r\n        console.log(e);\r\n        console.log(e.stack);\r\n        console.log(`did not find query result recording (${filename}) \\n for collection ${name} operation ${op} \\n query arguments: ` + JSONStringify(query));\r\n        throw e;\r\n    }\r\n    if (res === undefined) {\r\n        debuglog('empty result for query ' + op + ' ' + JSON.stringify(query, undefined, 2) + '\\n' + filename);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function instrumentModelRecord(modelDoc: mongoose.Model<any>) {\r\n    console.log('mongoose_record_replay is instrumenting model ' + modelDoc.modelName + ' for recording ');\r\n    var oFind = modelDoc.find;\r\n    modelDoc.find = function (): any {\r\n        debuglog('someone is calling find with ' + modelDoc.modelName + JSON.stringify(arguments, undefined, 2));\r\n        var res = oFind.apply(modelDoc, arguments);\r\n        if (arguments.length !== 1) {\r\n            throw Error('expected one arguments in find, was ' + arguments.length);\r\n        }\r\n        var query = arguments[0];\r\n        res.lean().exec().then((a) => {\r\n            //console.log(\"here result1 + \" + JSON.stringify(a, undefined,2) );\r\n            recordOp(\"find\", modelDoc.modelName, query, a);\r\n        }\r\n        );\r\n        return res;\r\n    }\r\n    var oDistinct = modelDoc.distinct;\r\n    modelDoc.distinct = function (): any {\r\n        debuglog('someone is calling distinct with' + JSON.stringify(arguments, undefined, 2));\r\n        var res = oDistinct.apply(modelDoc, arguments);\r\n        if (arguments.length !== 1) {\r\n            throw Error('expected on arguments');\r\n        }\r\n        var query = arguments[0];\r\n        res.then((a) => {\r\n            // console.log(\"here result1 + \" + JSON.stringify(a, undefined,2) );\r\n            recordOp(\"distinct\", modelDoc.modelName, query, a);\r\n        }\r\n        );\r\n        return res;\r\n    }\r\n    var oAggregate = modelDoc.aggregate;\r\n    modelDoc.aggregate = function (): any {\r\n        debuglog(() => 'someone is calling aggregate with' + JSON.stringify(arguments, undefined, 2));\r\n        var query = Array.prototype.slice.call(arguments);\r\n        var res = oAggregate.apply(modelDoc, arguments);\r\n        res.then((a) => {\r\n            debuglog(() => \"here result1 + \" + JSON.stringify(a, undefined, 2));\r\n            recordOp(\"aggregate\", modelDoc.modelName, query, a);\r\n        }\r\n        );\r\n        return res;\r\n    }\r\n}\r\n\r\nexport function instrumentModelReplay(modelDoc: mongoose.Model<any>) {\r\n    debuglog('instrumenting model ' + modelDoc.modelName);\r\n    var oFind = modelDoc.find;\r\n    modelDoc.find = function (): any {\r\n        debuglog(() => 'someone is replaying find with' + JSON.stringify(arguments, undefined, 2));\r\n        var query = arguments[0];\r\n        var res = retrieveOp(\"find\", modelDoc.modelName, query);\r\n        debuglog(() => 'returning res ' + JSON.stringify(res) + ' for query find' + query);\r\n        return {\r\n            lean: function () {\r\n                return {\r\n                    exec: function () {\r\n                        return new Promise(function (resolve, reject) {\r\n                            setTimeout(function () {\r\n                                resolve(res);\r\n                            }, 0);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    var oDistinct = modelDoc.distinct;\r\n    modelDoc.distinct = function (): any {\r\n        debuglog('someone is replaying distinct with' + JSON.stringify(arguments, undefined, 2));\r\n        var query = arguments[0];\r\n        var res = retrieveOp(\"distinct\", modelDoc.modelName, query);\r\n        debuglog('returning res ' + JSON.stringify(res) + ' for query find' + query);\r\n        return new Promise(function (resolve, reject) {\r\n            setTimeout(function () { resolve(res); }, 0);\r\n        });\r\n    }\r\n    var oAggregate = modelDoc.aggregate;\r\n    modelDoc.aggregate = function (): any {\r\n        debuglog('someone is replaying aggregate with' + JSON.stringify(arguments, undefined, 2));\r\n        var query = Array.prototype.slice.call(arguments);\r\n        var res = retrieveOp(\"aggregate\", modelDoc.modelName, query);\r\n        var p = new Promise(function (resolve, reject) {\r\n            setTimeout(function () { resolve(res); }, 0);\r\n        });\r\n        (p as any).exec = function () {\r\n            return p;\r\n        }\r\n        return p;\r\n    }\r\n}\r\n\r\n/**\r\n * funtion to instrument mongoose\r\n *\r\n *\r\n *\r\n * @param mongoose a real mongoose instance\r\n * @param [path] {string} optional, a path to write/read files from, defaults to \"mgrecrep/\"\r\n * @param mode {string}  undefined (environment value) or \"REPLAY\" or \"RECORD\"\r\n */\r\nexport function instrumentMongoose(mongoose: mongoose.Mongoose, path?: string, mode?: string): mongoose.Mongoose {\r\n    theMode = mode || process.env.MONGO_RECORD_REPLAY;\r\n    if (mode && [\"REPLAY\", \"RECORD\"].indexOf(mode) < 0) {\r\n        console.log('set only one of MONGO_RECORD MONGO_REPLAY');\r\n        throw new Error('mongoose_record_replay mode should be one of \"REPLAY\", \"RECORD\"  was ' + theMode);\r\n    }\r\n    if (theMode === \"RECORD\") {\r\n        recordingPath = path || process.env.MONGO_RECORD_REPLAY_PATH || \"mongoose_record_replay\";\r\n        assurePath(recordingPath);\r\n        var omodel = mongoose.model;\r\n        mongoose.model = function () {\r\n            if (arguments.length > 1) {\r\n                return instrumentModel(omodel.apply(mongoose, arguments));\r\n            }\r\n            return omodel.apply(mongoose, arguments);\r\n        }\r\n        return mongoose;\r\n    } else if (theMode === \"REPLAY\") {\r\n        recordingPath = path || process.env.MONGO_RECORD_REPLAY_PATH || \"mongoose_record_replay\";\r\n        return mongooseMock as any;\r\n    }\r\n    return mongoose;\r\n}\r\n\r\n\r\nexport var mongooseMock = {\r\n    models: {},\r\n    modelNames: function () {\r\n        return Object.keys(this.models);\r\n    },\r\n    Schema: mongoose.Schema,\r\n\r\n    model: function (a, b) {\r\n        if (b === undefined) {\r\n            return this.models[a];\r\n        }\r\n        debuglog('creating model  ' + a + ' at mock');\r\n        this.models[a] = instrumentModel({\r\n            find: function () { },\r\n            aggregate: function () { },\r\n            distinct: function () { },\r\n            modelName: a,\r\n            schema: b,\r\n        } as any);\r\n        return this.models[a];\r\n    },\r\n    disconnect: function () {\r\n        debuglog('simulationg disconnect ');\r\n    },\r\n    connect: function (connStr: string) {\r\n        // this.db.on.emit('on');\r\n        debuglog('simulationg connecting to ' + connStr);\r\n        if (!this._once) {\r\n            var that = this;\r\n            setTimeout(function () {\r\n                that.connection.emit('open');\r\n                debuglog('fired emit');\r\n            }, 0);\r\n        }\r\n    },\r\n    connection: dbEmitter\r\n};\r\n"],"sourceRoot":"ABC"}
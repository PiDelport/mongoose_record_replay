{"version":3,"sources":["/projects/nodejs/botbuilder/fdevstar_monmove/src/../src/index.ts"],"names":[],"mappings":";AAAA;;;;;GAKG;;AAEH,oCAAoC;AACpC,iCAAiC;AAEjC,IAAI,QAAQ,GAAG,MAAM,CAAC,wBAAwB,CAAC,CAAC;AAChD,iDAAiD;AAEjD,mCAAmC;AACnC,qCAAqC;AACrC,iCAAiC;AAEjC,IAAI,aAAa,GAAG,yBAAyB,CAAC;AAE9C,IAAI,aAAa,GAAG,WAAW,CAAC;AAGhC,wBAAwB,QAAgB;IACpC,IAAI,IAAI,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IAC9C,IAAI,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,QAAQ,GAAG,aAAa,GAAG,CAAC,CAAC,CAAC;QAC/D,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;IACD,MAAM,CAAC,SAAS,CAAC;AACrB,CAAC;AAGD,oBAAoB,IAAa;IAC7B,IAAI,CAAC;QACD,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAEvB,CAAC;IAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAEb,CAAC;IACD,IAAI,CAAC;QACD,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC;IAChC,CAAC;IAAC,KAAK,CAAA,CAAC,CAAC,CAAC,CAAC,CAAC;IAEZ,CAAC;AACL,CAAC;AAED,IAAI,SAAS,GAAG,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC;AAC1C,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;AAE7B,yBAAyB;AAEzB,yBAAgC,KAA2B;IACvD,EAAE,CAAA,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,IAAI,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;QACtD,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;QACzD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;IACD,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;QAC3B,qBAAqB,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;QAClC,OAAO;QACP,qBAAqB,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IACD,MAAM,CAAC,KAAK,CAAC;AACjB,CAAC;AAZD,0CAYC;AAED,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAE/B,sBAAsB,MAAM;IACzB,MAAM,CAAC,CAAC,aAAa,GAAG,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC,CAAC;AACvD,CAAC;AAED,kBAAyB,EAAW,EAAE,IAAa,EAAE,KAAW,EAAE,GAAS;IACvE,IAAI,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACtC,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC,CAAC;IAClC,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IACjD,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAClC,EAAE,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;IAExE,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,IAAI,CAAC;QACD,KAAK,GAAG,cAAc,CAAC,aAAa,GAAG,cAAc,CAAC,CAAC;IAC3D,CAAC;IAAC,KAAK,CAAA,CAAC,EAAE,CAAC,CAAC,CAAC;IAEb,CAAC;IACD,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,EAAG,EAAE;QACb,IAAI,EAAG,IAAI;QACX,MAAM,EAAG,MAAM;QACf,KAAK,EAAG,KAAK;QACjB,GAAG,EAAG,GAAG,EAAC,CAAC;IACnB,EAAE,CAAC,aAAa,CAAC,aAAa,GAAG,cAAc,EAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;AACvF,CAAC;AAnBD,4BAmBC;AAED,oBAA2B,EAAW,EAAE,IAAa,EAAE,KAAW;IAC9D,IAAI,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACtC,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IACjD,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAClC,IAAI,QAAQ,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;IACpC,QAAQ,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC;IAClC,IAAI,GAAG,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;IACnC,MAAM,CAAC,GAAG,CAAC;AACf,CAAC;AARD,gCAQC;AAED,+BAAsC,QAA8B;IAChE,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;IACzD,IAAI,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC;IAC1B,QAAQ,CAAC,IAAI,GAAG;QACZ,QAAQ,CAAC,+BAA+B,GAAG,QAAQ,CAAC,SAAS,GAAK,IAAI,CAAC,SAAS,CAAC,SAAS,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;QACzG,IAAI,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAC3C,EAAE,CAAA,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,KAAK,CAAC,sCAAsC,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;QAC3E,CAAC;QACD,IAAI,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACzB,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAE,CAAC,CAAC;YACtB,mEAAmE;YACnE,QAAQ,CAAC,MAAM,EAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QAClD,CAAC,CACA,CAAC;QACF,MAAM,CAAC,GAAG,CAAC;IACf,CAAC,CAAA;IACA,IAAI,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC;IACnC,QAAQ,CAAC,QAAQ,GAAG;QAChB,QAAQ,CAAC,kCAAkC,GAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;QACtF,IAAI,GAAG,GAAG,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAC/C,EAAE,CAAA,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,KAAK,CAAC,uBAAuB,CAAC,CAAC;QACzC,CAAC;QACD,IAAI,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACzB,GAAG,CAAC,IAAI,CAAE,CAAC,CAAC;YACT,oEAAoE;YACnE,QAAQ,CAAC,UAAU,EAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QACtD,CAAC,CACA,CAAC;QACF,MAAM,CAAC,GAAG,CAAC;IACf,CAAC,CAAA;IACA,IAAI,UAAU,GAAG,QAAQ,CAAC,SAAS,CAAC;IACpC,QAAQ,CAAC,SAAS,GAAG;QAClB,QAAQ,CAAC,MAAM,mCAAmC,GAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;QAC7F,IAAI,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClD,IAAI,GAAG,GAAG,UAAU,CAAC,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAChD,GAAG,CAAC,IAAI,CAAE,CAAC,CAAC;YACT,QAAQ,CAAC,MAAK,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,EAAC,CAAC,CAAC,CAAE,CAAC;YAClE,QAAQ,CAAC,WAAW,EAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QACvD,CAAC,CACA,CAAC;QACF,MAAM,CAAC,GAAG,CAAC;IACf,CAAC,CAAA;AACL,CAAC;AA5CD,sDA4CC;AAED,+BAAsC,QAA8B;IAChE,QAAQ,CAAC,sBAAsB,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;IACtD,IAAI,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC;IAC1B,QAAQ,CAAC,IAAI,GAAG;QACZ,QAAQ,CAAC,MAAM,gCAAgC,GAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;QAC1F,IAAI,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACzB,IAAI,GAAG,GAAG,UAAU,CAAC,MAAM,EAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QACvD,QAAQ,CAAE,MAAK,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,iBAAiB,GAAG,KAAK,CAAC,CAAC;QACnF,MAAM,CAAC;YACH,IAAI,EAAG;gBACH,MAAM,CAAC;oBACH,IAAI,EAAG;wBACH,MAAM,CAAC,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM;4BACvC,UAAU,CAAC;gCACP,OAAO,CAAC,GAAG,CAAC,CAAC;4BAAC,CAAC,EAAC,CAAC,CAAC,CAAC;wBAC3B,CAAC,CAAC,CAAC;oBACP,CAAC;iBACJ,CAAA;YACL,CAAC;SACJ,CAAA;IACL,CAAC,CAAA;IACD,IAAI,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC;IAClC,QAAQ,CAAC,QAAQ,GAAG;QAChB,QAAQ,CAAC,oCAAoC,GAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;QACxF,IAAI,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACzB,IAAI,GAAG,GAAG,UAAU,CAAC,UAAU,EAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAC3D,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,iBAAiB,GAAG,KAAK,CAAC,CAAC;QAC7E,MAAM,CAAC,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM;YACvB,UAAU,CAAC,cAAa,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACvB,CAAC,CAAA;IACA,IAAI,UAAU,GAAG,QAAQ,CAAC,SAAS,CAAC;IACpC,QAAQ,CAAC,SAAS,GAAG;QAClB,QAAQ,CAAC,qCAAqC,GAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;QACzF,IAAI,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClD,IAAI,GAAG,GAAG,UAAU,CAAC,WAAW,EAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAC5D,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM;YACxB,UAAU,CAAC,cAAa,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;QAClB,CAAS,CAAC,IAAI,GAAG;YACd,MAAM,CAAC,CAAC,CAAC;QACb,CAAC,CAAA;QACD,MAAM,CAAC,CAAC,CAAC;IACb,CAAC,CAAA;AACL,CAAC;AA5CD,sDA4CC;AAED,4BAAmC,QAA2B,EAAE,IAAc,EAAE,IAAc;IACzF,IAAI,OAAO,GAAG,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;IACtD,EAAE,CAAA,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAChD,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;QACzD,MAAM,IAAI,KAAK,CAAC,uEAAuE,GAAG,OAAO,CAAC,CAAC;IACvG,CAAC;IACD,EAAE,CAAC,CAAC,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC;QACvB,aAAa,GAAG,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,wBAAwB,IAAI,wBAAwB,CAAC;QACzF,UAAU,CAAC,aAAa,CAAC,CAAC;QAC1B,IAAI,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC;QAC5B,QAAQ,CAAC,KAAK,GAAG;YACb,EAAE,CAAA,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACtB,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;YAC9D,CAAC;YACD,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAC7C,CAAC,CAAA;QACD,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC;QAC9B,aAAa,GAAG,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,wBAAwB,IAAI,wBAAwB,CAAC;QACzF,MAAM,CAAC,oBAAmB,CAAC;IAC/B,CAAC;IACD,MAAM,CAAC,QAAQ,CAAC;AACpB,CAAC;AAtBD,gDAsBC;AAGU,QAAA,YAAY,GAAG;IACtB,MAAM,EAAG,EAAE;IACX,UAAU,EAAG;QACT,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IACD,MAAM,EAAG,QAAQ,CAAC,MAAM;IAExB,KAAK,EAAG,UAAS,CAAC,EAAC,CAAC;QAChB,EAAE,CAAA,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;YACjB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC;QACD,QAAQ,CAAC,kBAAkB,GAAE,CAAC,CAAC,CAAC;QAChC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC;YAC7B,IAAI,EAAG,cAAY,CAAC;YACpB,SAAS,EAAG,cAAY,CAAC;YACzB,QAAQ,EAAG,cAAY,CAAC;YACxB,SAAS,EAAG,CAAC;YACb,MAAM,EAAG,CAAC;SACN,CAAC,CAAC;QACV,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC;IACD,UAAU,EAAG;QACT,QAAQ,CAAC,yBAAyB,CAAC,CAAC;IACxC,CAAC;IACD,OAAO,EAAG,UAAS,OAAgB;QAChC,yBAAyB;QACzB,QAAQ,CAAC,4BAA4B,GAAG,OAAO,CAAC,CAAC;QAChD,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACb,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,UAAU,CAAC;gBACP,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC7B,QAAQ,CAAC,YAAY,CAAC,CAAC;YAC3B,CAAC,EAAC,CAAC,CAAC,CAAC;QACT,CAAC;IACL,CAAC;IACD,UAAU,EAAG,SAAS;CACzB,CAAC","file":"index.js","sourcesContent":["/**\r\n * instrument mongoose to replay queries ( !! only queries so far)\r\n *\r\n *\r\n * @file\r\n */\r\n\r\n//import * as intf from 'constants';\r\nimport * as debugf from 'debugf';\r\n\r\nvar debuglog = debugf('mongoose_record_replay');\r\n//const loadlog = logger.logger('modelload', '');\r\n\r\nimport * as process from 'process';\r\nimport * as mongoose from 'mongoose';\r\nimport * as events from 'events';\r\n\r\nvar recordingPath = 'mongoose_record_replay/';\r\n\r\nvar serializePath = 'mgrecrep/';\r\n\r\n\r\nfunction readFileAsJSON(filename: string): any {\r\n    var data = fs.readFileSync(filename, 'utf-8');\r\n    try {\r\n        return JSON.parse(data);\r\n    } catch (e) {\r\n        console.log(\"Content of file \" + filename + \" is no json\" + e);\r\n        process.exit(-1);\r\n    }\r\n    return undefined;\r\n}\r\n\r\n\r\nfunction assurePath(path : string) {\r\n    try {\r\n        fs.mkdirSync(path);\r\n\r\n    } catch (e) {\r\n\r\n    }\r\n    try {\r\n        fs.mkdirSync(path + 'data');\r\n    } catch(e) {\r\n\r\n    }\r\n}\r\n\r\nvar dbEmitter = new events.EventEmitter();\r\ndbEmitter.setMaxListeners(0);\r\n\r\nimport * as fs from 'fs';\r\n\r\nexport function instrumentModel(model : mongoose.Model<any>) {\r\n    if(process.env.MONGO_RECORD && process.env.MONGO_REPLAY) {\r\n        console.log('set only one of MONGO_RECORD MONGO_REPLAY');\r\n        process.exit(-1);\r\n    }\r\n    if (process.env.MONGO_RECORD) {\r\n        instrumentModelRecord(model);\r\n    } else if (process.env.MONGO_REPLAY) {\r\n        // todo\r\n        instrumentModelReplay(model);\r\n    }\r\n    return model;\r\n}\r\n\r\nvar crypto = require('crypto');\r\n\r\nfunction makeFileName(digest) {\r\n   return (recordingPath + 'data/' + digest + '.json');\r\n}\r\n\r\nexport function recordOp(op : string, name : string, query : any, res : any) {\r\n    var md5sum = crypto.createHash('md5');\r\n    debuglog('here the name ' + name);\r\n    md5sum.update(op + name + JSON.stringify(query));\r\n    var digest = md5sum.digest('hex');\r\n    fs.writeFileSync(makeFileName(digest), JSON.stringify(res,undefined,2));\r\n\r\n    var known = {};\r\n    try {\r\n        known = readFileAsJSON(recordingPath + 'queries.json');\r\n    } catch(ex) {\r\n\r\n    }\r\n    known[digest] = { op : op,\r\n                name : name,\r\n                digest : digest,\r\n                query : query,\r\n            res : res};\r\n    fs.writeFileSync(recordingPath + 'queries.json',JSON.stringify(known,undefined,2));\r\n}\r\n\r\nexport function retrieveOp(op : string, name : string, query : any) {\r\n    var md5sum = crypto.createHash('md5');\r\n    md5sum.update(op + name + JSON.stringify(query));\r\n    var digest = md5sum.digest('hex');\r\n    var filename = makeFileName(digest);\r\n    debuglog(' filename ' + filename);\r\n    var res = readFileAsJSON(filename);\r\n    return res;\r\n}\r\n\r\nexport function instrumentModelRecord(modelDoc : mongoose.Model<any>) {\r\n    console.log('instrumenting model ' + modelDoc.modelName);\r\n    var oFind = modelDoc.find;\r\n    modelDoc.find = function() : any {\r\n        debuglog('someone is calling find with ' + modelDoc.modelName   + JSON.stringify(arguments,undefined,2));\r\n        var res = oFind.apply(modelDoc, arguments);\r\n        if(arguments.length !== 1) {\r\n            throw Error('expected one arguments in find, was ' + arguments.length);\r\n        }\r\n        var query = arguments[0];\r\n        res.lean().exec().then( (a) => {\r\n            //console.log(\"here result1 + \" + JSON.stringify(a, undefined,2) );\r\n            recordOp(\"find\",modelDoc.modelName, query, a);\r\n        }\r\n        );\r\n        return res;\r\n    }\r\n     var oDistinct = modelDoc.distinct;\r\n    modelDoc.distinct = function() : any {\r\n        debuglog('someone is calling distinct with'  + JSON.stringify(arguments,undefined,2));\r\n        var res = oDistinct.apply(modelDoc, arguments);\r\n        if(arguments.length !== 1) {\r\n            throw Error('expected on arguments');\r\n        }\r\n        var query = arguments[0];\r\n        res.then( (a) => {\r\n           // console.log(\"here result1 + \" + JSON.stringify(a, undefined,2) );\r\n            recordOp(\"distinct\",modelDoc.modelName, query, a);\r\n        }\r\n        );\r\n        return res;\r\n    }\r\n     var oAggregate = modelDoc.aggregate;\r\n     modelDoc.aggregate = function() : any {\r\n        debuglog(() => 'someone is calling aggregate with'  + JSON.stringify(arguments,undefined,2));\r\n        var query = Array.prototype.slice.call(arguments);\r\n        var res = oAggregate.apply(modelDoc, arguments);\r\n        res.then( (a) => {\r\n           debuglog(() =>\"here result1 + \" + JSON.stringify(a, undefined,2) );\r\n            recordOp(\"aggregate\",modelDoc.modelName, query, a);\r\n        }\r\n        );\r\n        return res;\r\n    }\r\n}\r\n\r\nexport function instrumentModelReplay(modelDoc : mongoose.Model<any>) {\r\n    debuglog('instrumenting model ' + modelDoc.modelName);\r\n    var oFind = modelDoc.find;\r\n    modelDoc.find = function() : any {\r\n        debuglog(() => 'someone is replaying find with'  + JSON.stringify(arguments,undefined,2));\r\n        var query = arguments[0];\r\n        var res = retrieveOp(\"find\",modelDoc.modelName, query);\r\n        debuglog( ()=> 'returning res ' + JSON.stringify(res) + ' for query find' + query);\r\n        return {\r\n            lean : function() {\r\n                return {\r\n                    exec : function() {\r\n                        return new Promise(function(resolve, reject) {\r\n                            setTimeout(function() {\r\n                                resolve(res); },0);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    var oDistinct = modelDoc.distinct;\r\n    modelDoc.distinct = function() : any {\r\n        debuglog('someone is replaying distinct with'  + JSON.stringify(arguments,undefined,2));\r\n        var query = arguments[0];\r\n        var res = retrieveOp(\"distinct\",modelDoc.modelName, query);\r\n        debuglog('returning res ' + JSON.stringify(res) + ' for query find' + query);\r\n        return new Promise(function(resolve, reject) {\r\n                            setTimeout(function() { resolve(res); },0);\r\n                        });\r\n    }\r\n     var oAggregate = modelDoc.aggregate;\r\n     modelDoc.aggregate = function() : any {\r\n        debuglog('someone is replaying aggregate with'  + JSON.stringify(arguments,undefined,2));\r\n        var query = Array.prototype.slice.call(arguments);\r\n        var res = retrieveOp(\"aggregate\",modelDoc.modelName, query);\r\n        var p = new Promise(function(resolve, reject) {\r\n                            setTimeout(function() { resolve(res); },0);\r\n                        });\r\n        (p as any).exec = function() {\r\n            return p;\r\n        }\r\n        return p;\r\n    }\r\n}\r\n\r\nexport function instrumentMongoose(mongoose: mongoose.Mongoose, path? : string, mode? : string) : mongoose.Mongoose {\r\n     var themode = mode || process.env.MONGO_RECORD_REPLAY;\r\n     if(mode && [\"REPLAY\",\"RECORD\"].indexOf(mode) < 0) {\r\n        console.log('set only one of MONGO_RECORD MONGO_REPLAY');\r\n        throw new Error('mongoose_record_replay mode should be one of \"REPLAY\", \"RECORD\"  was ' + themode);\r\n    }\r\n    if (themode === \"RECORD\") {\r\n        recordingPath = path || process.env.MONGO_RECORD_REPLAY_PATH || \"mongoose_record_replay\";\r\n        assurePath(recordingPath);\r\n        var omodel = mongoose.model;\r\n        mongoose.model = function() {\r\n            if(arguments.length > 1) {\r\n                return instrumentModel(omodel.apply(mongoose, arguments));\r\n            }\r\n            return omodel.apply(mongoose, arguments);\r\n        }\r\n        return mongoose;\r\n    } else if (themode === \"REPLAY\") {\r\n        recordingPath = path || process.env.MONGO_RECORD_REPLAY_PATH || \"mongoose_record_replay\";\r\n        return mongooseMock as any;\r\n    }\r\n    return mongoose;\r\n}\r\n\r\n\r\nexport var mongooseMock = {\r\n    models : {},\r\n    modelNames : function() {\r\n        return Object.keys(this.models);\r\n    },\r\n    Schema : mongoose.Schema,\r\n\r\n    model : function(a,b) {\r\n        if(b === undefined) {\r\n            return this.models[a];\r\n        }\r\n        debuglog('createing model '+ a);\r\n        this.models[a] = instrumentModel({\r\n            find : function() {},\r\n            aggregate : function() {},\r\n            distinct : function() {},\r\n            modelName : a,\r\n            schema : b,\r\n        } as any);\r\n        return this.models[a];\r\n    },\r\n    disconnect : function() {\r\n        debuglog('simulationg disconnect ');\r\n    },\r\n    connect : function(connStr : string) {\r\n       // this.db.on.emit('on');\r\n       debuglog('simulationg connecting to ' + connStr);\r\n        if(!this._once) {\r\n            var that = this;\r\n            setTimeout(function() {\r\n                that.connection.emit('open');\r\n                debuglog('fired emit');\r\n            },0);\r\n        }\r\n    },\r\n    connection : dbEmitter\r\n};\r\n"],"sourceRoot":"ABC"}